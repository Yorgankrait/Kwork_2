#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ JSON —Ñ–∞–π–ª–æ–≤ –≤ —Å–º–µ—Ç—ã
–î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ PythonAnywhere
"""
import os
import json
import time
import requests
from pathlib import Path

# URL —Å–µ—Ä–≤–∏—Å–∞
BASE_URL = "https://yorgankrait.pythonanywhere.com"

def send_json_to_server(json_data, filename):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç JSON –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
    try:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        payload = {"–î–∞–Ω–Ω—ã–µ": json.dumps(json_data)}

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        print(f"\n=== –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞: {filename} ===")
        response = requests.post(f"{BASE_URL}/api/smeta_create/", json=payload)

        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")

        if response.status_code == 201:
            print(f"‚úÖ –°–º–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            print(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–º–µ—Ç—É: {response.text}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ—Ç—ã")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {filename}: {str(e)}")
        return False

def main():
    # –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å JSON —Ñ–∞–π–ª–∞–º–∏ –Ω–∞ PythonAnywhere
    json_dir = Path("/home/Yorgankrait/Kwork_2/jsons")

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    json_dir.mkdir(exist_ok=True)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ JSON —Ñ–∞–π–ª–æ–≤
    json_files = sorted(json_dir.glob("*.json"))
    total_files = len(json_files)

    print(f"\n–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {total_files}")

    # –°—á–µ—Ç—á–∏–∫–∏ —É—Å–ø–µ—à–Ω—ã—Ö –∏ –Ω–µ—É—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
    success_count = 0
    failed_count = 0

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for i, file_path in enumerate(json_files, 1):
        print(f"\n–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ {i}/{total_files}: {file_path.name}")

        try:
            # –ß–∏—Ç–∞–µ–º JSON —Ñ–∞–π–ª
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)

            if send_json_to_server(data, file_path.name):
                success_count += 1
            else:
                failed_count += 1

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path.name}: {str(e)}")
            failed_count += 1

        # –î–µ–ª–∞–µ–º –ø–∞—É–∑—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        if i < total_files:
            time.sleep(2)

    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\n=== –ò—Ç–æ–≥–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ ===")
    print(f"–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {total_files}")
    print(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count}")
    print(f"–û—à–∏–±–æ–∫: {failed_count}")

if __name__ == "__main__":
    main()